`timescale 1ns / 1ps

module disp_ctrl(
    input wire pix_clk,      // 1x pixel clock from Clock Wizard
    input wire pix_clkx5,    // 5x pixel clock for hdmi_tx_0
    input wire rst,          // active-high reset

    input wire [6:0] ascii,
    input wire [9:0] loc_x,
    input wire [9:0] loc_y,
    input wire [23:0] ch_color,
    input wire [23:0] bg_color,

    // HDMI outputs (TMDS pairs)
    output wire hdmi_clk_p,
    output wire hdmi_clk_n,
    output wire [2:0] hdmi_tx_p,
    output wire [2:0] hdmi_tx_n
);

    // -----------------------------
    // VGA timing
    // -----------------------------
    wire [9:0] px, py;
    wire hsync, vsync, video_active;

    vga_sync vga_timing (
        .clk(pix_clk),
        .rst(rst),
        .hsync(hsync),
        .vsync(vsync),
        .video_active(video_active),
        .px(px),
        .py(py)
    );

    // -----------------------------
    // Character renderer
    // -----------------------------
    wire [7:0] red, green, blue;

    char_rend char_disp (
        .px(px),
        .py(py),
        .video_active(video_active),
        .ascii(ascii),
        .loc_x(loc_x),
        .loc_y(loc_y),
        .ch_color(ch_color),
        .bg_color(bg_color),
        .red(red),
        .green(green),
        .blue(blue)
    );

    // -----------------------------
    // HDMI transmitter (hdmi_tx_0)
    // -----------------------------
    hdmi_tx_0 hdmi_ip (
        .pix_clk(pix_clk),
        .pix_clkx5(pix_clkx5),
        .pix_clk_locked(1'b1),  // assume external Clock Wizard locked
        .rst(rst),
        .red(red),
        .green(green),
        .blue(blue),
        .hsync(hsync),
        .vsync(vsync),
        .vde(video_active),
        .aux0_din(4'b0),
        .aux1_din(4'b0),
        .aux2_din(4'b0),
        .ade(1'b0),
        .TMDS_CLK_P(hdmi_clk_p),
        .TMDS_CLK_N(hdmi_clk_n),
        .TMDS_DATA_P(hdmi_tx_p),
        .TMDS_DATA_N(hdmi_tx_n)
    );

endmodule
